<% provide(:flow, @device.product.model_class_name + "," + I18n.t("titles.settings.ddns")) %>
<% provide(:tab, 'my_devices') %>

<div class="ddns" ng-app="ddns_app" ng-controller="DdnsCtrl" ng-init="session=<%= @ddns_session.to_json %>; checkStatus();">

  <div ng-switch on="step" class="zyxel_content" style="max-width: 550px">
    <%# display success information when bot change the session status %>
    <div ng-switch-when="success">
      <h2 class="zyxel_h2_icon"><%= I18n.t("warnings.settings.ddns.success") %></h2>

      <span class="zyxel_span2"><%= @full_domain %></span>
      <div class="zyxel_btn_area">
        <%= link_to I18n.t("labels.confirm"), @link_path, class: "zyxel_btn_ok" %>
      </div>
    </div>
    <%# display success information - end %>

    <div ng-switch-when="loading" class="waiting">
      <span class="zyxel_span2"><%= I18n.t("warnings.settings.ddns.sync") %></span>
      <%= image_tag 'loading.gif' %>
    </div>
  </div>
</div>

<script type="text/javascript">
  // check DDNS session status
  var ddns_app = angular.module('ddns_app', ['timer']);

  ddns_app.controller('DdnsCtrl', function($scope, $http, $timeout, $window) {
    $scope.session;
    $scope.failurePath = "/ddns/failure/";
    $scope.statusPath = "/ddns/success/";
    $scope.step = "loading";
    $scope.loadTimes = 0;
    $scope.timesLimit = 16;
    $scope.interval = 3500;
    $scope.formateSuffix = ".json";

    $scope.checkStatus = function() {

      $scope.disableBtn();
      $timeout(function() {
        $scope.loadTimes++;

        // get ajax
        $http.get($scope.statusPath + $scope.session.encrypted_id + $scope.formateSuffix, { cache: false}).success(function(response) {

          // display success information when status was changed to success
          if(response.status == "success") {
            $scope.step = "success";
            $scope.session = response;
            $scope.enableBtn();
            return;

          // redirect to setting page and set error message when timeout or failure
          } else if(response.status == "failure" || $scope.loadTimes >= $scope.timesLimit) {
            $window.location.href = $scope.failurePath + response.encrypted_device_id;
          } else {
            $scope.checkStatus();
          }
        });

      }, $scope.interval);

    };

    $scope.disableBtn = function(){
      var allButton = document.querySelectorAll("a:not(.zyxel_enabled)");
      for(var i=0; i<allButton.length; i++){
        var $thisBtn = allButton[i];
        var $thisUrl = $thisBtn.getAttribute('href');
        if ($thisUrl != "#"){
          $thisBtn.setAttribute('data-href', $thisUrl);
          $thisBtn.setAttribute('href', '#');
        };
      };
    };

    $scope.enableBtn = function(){
      var allButton = document.querySelectorAll("a[data-href]:not(.zyxel_enabled)");
      for(var i=0; i<allButton.length; i++){
        var $thisBtn = allButton[i];
        var $dataUrl = $thisBtn.getAttribute('data-href');
        $thisBtn.setAttribute('href', $dataUrl);
      };
    };

  });
  // check DDNS session status - end
</script>
